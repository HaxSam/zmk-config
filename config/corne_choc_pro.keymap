/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt { flavor = "balanced"; };

/ {
    chosen { zmk,physical-layout = &five_col_layout; };
};

/ {
    combos {
        compatible = "zmk,combos";

        mo_control_layer {
            bindings = <&mo 3>;
            key-positions = <35 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alphabet {
            display-name = "Anymak:END";

            // ------------------------------------------------------------------------------
            // |  Q  |  K  |  O  |  U  |  Y  |  [ (  |  ] )  |  V  |  D  |  C  |  L  |  F  |
            // |  H  |  A  |  E  |  I  |  ,  |  TAB  |  / \  |  G  |  T  |  R  |  N  | √ü S |
            // |  ‚áß  | ‚åÉ Z | ‚éá J| ‚åò . |  X  |       |       |  B  | ‚åò P | ‚éá M | ‚åÉ M |  ‚á™  |
            //             | DEL | LWR | ENT |       |       | SPC | RSE | BSP |
            //
            // Legend:
            // - () indicates Mod-Tap (e.g., [ becomes LEFT_BRACKET when tapped, LEFT_PARENTHESIS when held)
            // - ‚éá = Alt, ‚åÉ = Control, ‚åò = Command, ‚áß = Shift, ‚á™ = Caps
            // - LWR = Layer 2, RSE = Layer 1, LWR+RSE = Layer 3

            bindings = <
  &kp DE_Q        &kp DE_K               &kp DE_O           &kp DE_U                    &kp DE_Y      &mt DE_LEFT_BRACKET DE_LEFT_PARENTHESIS  &mt DE_RIGHT_BRACKET DE_RIGHT_PARENTHESIS  &kp DE_V   &kp DE_D                &kp DE_C            &kp DE_L                &kp DE_F
  &kp DE_H        &kp DE_A               &kp DE_E           &kp DE_I                    &kp DE_COMMA  &kp TAB                                  &mt DE_BACKSLASH DE_SLASH                  &kp DE_G   &kp DE_T                &kp DE_R            &kp DE_N                &kp DE_S
  &kp LEFT_SHIFT  &mt LEFT_CONTROL DE_Z  &mt LEFT_ALT DE_J  &mt LEFT_COMMAND DE_PERIOD  &kp DE_X                                                                                          &kp DE_B   &mt RIGHT_COMMAND DE_P  &mt RIGHT_ALT DE_M  &mt RIGHT_CONTROL DE_W  &mt CAPSLOCK DE_SHARP_S
                                         &kp DELETE         &mo 2                       &kp ENTER                                                                                         &kp SPACE  &mo 1                   &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        Numbers_and_Symbols {
            display-name = "Number & Symbol Layer";

            // -----------------------------------------------------------------------------
            // |  %  | $ ‚Ç¨ |  √∂  |  √º  | ¬∞ ^ |  < {  |  > }  |  1  |  2  |  3  |  4  |  5  |
            // |  |  | ~ √§ |  =  |  -  |  +  |  #    |  *    |  @  |  ‚Üê  |  ‚Üì  |  ‚Üë  |  ‚Üí  |
            // | ‚áß & | ‚åÉ ` | ‚éá "| ‚åò ' | ! ? |               |  6  | ‚åò 7 | ‚éá 8 | ‚åÉ 9 | ‚á™ 0 |
            //             |     |     |     |               |     |     |     |
            //
            // Legend:
            // - ‚éá = Alt, ‚åÉ = Control, ‚åò = Command, ‚áß = Shift, ‚á™ = Caps
            // - () indicates Mod-Tap
            // - Layer is mainly numeric/symbol with modifiers and nav keys

            bindings = <
  &kp DE_PERCENT               &mt DE_DOLLAR DE_EURO      &kp DE_O_UMLAUT                &kp DE_U_UMLAUT          &mt DE_DEGREE DE_CARET          &mt DE_LESS_THAN DE_LEFT_BRACE  &mt DE_GREATER_THAN DE_RIGHT_BRACE  &kp N1        &kp N2                &kp N3            &kp NUMBER_4          &kp N5
  &kp DE_PIPE                  &mt DE_TILDE DE_A_UMLAUT   &kp DE_EQUAL                   &kp DE_MINUS             &kp DE_PLUS                     &kp DE_HASH                     &kp DE_ASTERISK                     &kp DE_AT     &kp LEFT              &kp DOWN          &kp UP                &kp RIGHT
  &mt LEFT_SHIFT DE_AMPERSAND  &mt LEFT_CONTROL DE_GRAVE  &mt LEFT_ALT DE_DOUBLE_QUOTES  &mt LEFT_COMMAND DE_SQT  &mt DE_EXCLAMATION DE_QUESTION                                                                      &kp NUMBER_6  &mt RIGHT_COMMAND N7  &mt RIGHT_ALT N8  &mt RIGHT_CONTROL N9  &mt CAPSLOCK N0
                                                          &trans                         &trans                   &trans                                                                                              &trans        &trans                &trans
            >;
        };

        Aerospace_and_Makros {
            display-name = "Aerospace, Mouse & VS Code Commands";
            bindings = <
  &mt LS(LC(LA(LG(N1)))) LC(LA(LG(N1)))  &mt LS(LC(LA(LG(N2)))) LC(LA(LG(N2)))  &mt LS(LC(LA(LG(N3)))) LC(LA(LG(N3)))  &mt LS(LC(LA(LG(NUMBER_4)))) LC(LA(LG(NUMBER_4)))  &mt LS(LC(LA(LG(N0)))) LC(LA(LG(N0)))           &trans  &trans  &kp ESCAPE                       &msc SCRL_RIGHT                               &msc SCRL_UP    &msc SCRL_DOWN  &msc SCRL_LEFT
  &mt LS(LC(LA(LG(Q)))) LC(LA(LG(Q)))    &mt LS(LC(LA(LG(W)))) LC(LA(LG(W)))    &mt LS(LC(LA(LG(E)))) LC(LA(LG(E)))    &mt LS(LC(LA(LG(R)))) LC(LA(LG(R)))                &mt LC(LA(LG(DE_PERIOD))) LC(LA(LG(DE_COMMA)))  &trans  &trans  &mt LS(LG(N5)) LS(LG(NUMBER_4))  &mmv MOVE_LEFT                                &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT
  &kp LC(LA(LG(G)))                      &kp LC(LA(LG(H)))                      &kp LC(LA(LG(J)))                      &kp LC(LA(LG(K)))                                  &kp LC(LA(LG(M)))                                               &mt LA(LG(DOWN)) LA(LG(D))       &mt LG(DE_LEFT_BRACKET) LG(DE_RIGHT_BRACKET)  &kp F2          &kp LS(LG(P))   &mt LA(DOWN) LA(UP_ARROW)
                                                                                &mt LC(LA(LG(D))) LC(LA(LG(A)))        &trans                                             &mt LC(LA(LG(F))) LC(LA(LG(S)))                                 &mkp LCLK                        &mkp MCLK                                     &mkp RCLK
            >;
        };

        fn_and_control {
            display-name = "Fn-Keys & Sys-Control";

            // --------------------------------------------------------------------------------
            // |  üîá  | VOL- | VOL+ | BRI- | BRI+ |       |       | ‚èÆ  | F1   | F2   | F3  | F4  |
            // | BT1  | BT2  | BT3  | BT4  | BT5  |       |       | ‚èØ  | F5   | F6   | F7  | F8  |
            // | BCLR | RGB  | RST  |      |      |               | ‚è≠  | F9   | F10  | F11 | F12 |
            //               |      |      |      |               |      |      |      |
            //
            // Legend:
            // - üîá = Mute
            // - VOL-, VOL+ = Volume controls
            // - BRI-, BRI+ = Brightness controls
            // - ‚èÆ / ‚èØ / ‚è≠ = Previous / Play-Pause / Next Track
            // - BT1‚ÄìBT5 = Bluetooth Profile Selects
            // - BCLR = Clear Bluetooth Bonds
            // - RGB = Toggle RGB
            // - RST = Reset

            bindings = <
  &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP  &trans  &trans  &kp C_PREV  &kp F1  &kp F2   &kp F3   &kp F4
  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &kp C_PP    &kp F5  &kp F6   &kp F7   &kp F8
  &bt BT_CLR    &rgb_ug RGB_TOG    &trans        &trans        &trans                        &kp C_NEXT  &kp F9  &kp F10  &kp F11  &kp F12
                                   &trans        &trans        &trans                        &trans      &trans  &trans
            >;
        };

        extra_layer_2 {
            display-name = "EXTRA 2";
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_3 {
            display-name = "EXTRA 3";
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_4 {
            display-name = "EXTRA 4";
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_5 {
            display-name = "EXTRA 5";
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_6 {
            display-name = "EXTRA 6";
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };
};
